import os
from utils import randcell


class Helicopter:
    """–ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –≤–µ—Ä—Ç–æ–ª–µ—Ç –≤ –∏–≥—Ä–µ"""

    def __init__(self, width: int, height: int):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π –Ω–∞ –∫–∞—Ä—Ç–µ

        Args:
            width (int): –®–∏—Ä–∏–Ω–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
            height (int): –í—ã—Å–æ—Ç–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        """
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        self.x, self.y = randcell(width, height)  # –ü–æ–∑–∏—Ü–∏—è –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞
        self.width = width                        # –®–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç—ã
        self.height = height                     # –í—ã—Å–æ—Ç–∞ –∫–∞—Ä—Ç—ã
        self.water_tank = 0                      # –¢–µ–∫—É—â–∏–π –∑–∞–ø–∞—Å –≤–æ–¥—ã
        self.max_water = 1                       # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –µ–º–∫–æ—Å—Ç—å –±–∞–∫–∞
        self.score = 0                           # –°—á–µ—Ç –∏–≥—Ä–æ–∫–∞
        self.lives = 20                          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–π
        # –°—á–µ—Ç—á–∏–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π (–¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
        self.moves_count = 0

    def move(self, dx: int, dy: int) -> None:
        """
        –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –≤–µ—Ä—Ç–æ–ª–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ

        Args:
            dx (int): –°–º–µ—â–µ–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
            dy (int): –°–º–µ—â–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
        """
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        new_x, new_y = self.x + dx, self.y + dy

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–∞—Ä—Ç—ã
        if 0 <= new_x < self.height and 0 <= new_y < self.width:
            self.x, self.y = new_x, new_y
            self.moves_count += 1

    def print_stats(self) -> None:
        """–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞"""
        print(f'üõ¢Ô∏è {self.water_tank}/{self.max_water}', end=' | ')
        print(f'üèÜ {self.score}', end=' | ')
        print(f'üíó {self.lives}')

    def game_over(self) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã"""
        os.system('cls' if os.name == 'nt' else 'clear')  # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Å–æ–ª—å
        print('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó')
        print('‚ïë                       ‚ïë')
        print(f'‚ïë  GAME OVER! SCORE: {self.score:<4} ‚ïë')
        print('‚ïë                       ‚ïë')
        print('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù')
        exit(0)

    def export_data(self) -> dict:
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        return {
            'score': self.score,
            'lives': self.lives,
            'x': self.x,
            'y': self.y,
            'water_tank': self.water_tank,
            'max_water': self.max_water,
            'moves_count': self.moves_count
        }

    def import_data(self, data: dict) -> None:
        """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
        self.x = data.get('x', 0)
        self.y = data.get('y', 0)
        self.water_tank = data.get('water_tank', 0)
        self.max_water = data.get('max_water', 1)
        self.lives = data.get('lives', 3)
        self.score = data.get('score', 0)
        self.moves_count = data.get('moves_count', 0)
